{
  "id": 12,
  "name": "Example - Java [jenkins]",
  "description": "Use Jenkins to build and test a Java Webapp",
  "home_url": "/projects/28",
  "scm_url": null,
  "tags": null,
  "parameters": {
    "scmUsername": null,
    "pomPassword": null,
    "groupId": null,
    "pomUrl": null,
    "scmUrl": null,
    "pomUsername": null,
    "scmPassword": null
  },
  "created_at": "2014-02-17T18:32:50+00:00",
  "updated_at": "2014-03-15T10:50:41+00:00",
  "compositions": [
    {
      "id": 26,
      "name": "1 - Standard Jenkins Build",
      "description": "Build the application, including any tests, then run selenium tests (Maven via Jenkins)",
      "schedule": "",
      "enabled": true,
      "state": null,
      "agent_facts": {

      },
      "tags": [

      ],
      "type": 1,
      "fail_on_cancel": false,
      "reuse_agent": true,
      "created_at": "2014-02-17T21:58:55+00:00",
      "updated_at": "2014-03-15T10:50:41+00:00",
      "max_queued_runs": 1,
      "max_concurrent_runs": 1,
      "agent_pool_id": 1,
      "on_error_id": null,
      "parent_id": null,
      "composition_tasks": [
        {
          "id": 93,
          "options": {
            "host": {
              "type": "String",
              "value": "localhost",
              "label": "Host",
              "required": true,
              "description": "Hostname of the Jenkins server"
            },
            "port": {
              "type": "Integer",
              "value": 8080,
              "label": "Port",
              "required": false,
              "description": "Port Jenkins is running on"
            },
            "job": {
              "type": "String",
              "value": "Jenkins Webapp",
              "label": "Job",
              "required": true,
              "description": "Name of the Jenkins job"
            },
            "username": {
              "type": "String",
              "value": "",
              "label": "Username",
              "required": false,
              "description": "Username for jenkins server"
            },
            "password": {
              "type": "Password",
              "value": "",
              "label": "Password",
              "required": false,
              "description": "Password for jenkins server"
            },
            "use_ssl": {
              "type": "Boolean",
              "value": false,
              "label": "Use SSL?",
              "required": true,
              "description": "Use https when talking to Jenkins"
            },
            "web_path": {
              "type": "String",
              "value": "",
              "label": "Web Path",
              "required": false,
              "description": "Path of the Jenkins application on the server"
            },
            "scm_url": {
              "type": "Url",
              "value": "https://github.com/maestrodev/eval-demo-maven-webapp.git",
              "label": "SCM URL",
              "required": false,
              "description": "Url of the source code repository"
            },
            "parameters": {
              "type": "Array",
              "value": [

              ],
              "label": "Parameters",
              "required": false,
              "description": "Parameters to pass to the job. Name=value formatted."
            },
            "user_defined_axes": {
              "type": "Array",
              "value": [

              ],
              "label": "User Defined Axes",
              "required": false,
              "description": "User defined axes used for a configuration matrix project"
            },
            "label_axes": {
              "type": "Array",
              "value": [

              ],
              "label": "Label Axes",
              "required": false,
              "description": "Labels for a configuration matrix project"
            },
            "steps": {
              "type": "Array",
              "value": [
                "mvn clean deploy",
                "mvn integration-test -Dintegration.test"
              ],
              "label": "Steps",
              "required": false,
              "description": "Set of steps to be executed by Jenkins"
            },
            "override_existing": {
              "type": "Boolean",
              "value": true,
              "label": "Override Existing?",
              "required": true,
              "description": "Overwrite existing jobs, or create if it does not exist"
            },
            "fail_on_unstable": {
              "type": "Boolean",
              "value": false,
              "label": "Fail on UNSTABLE",
              "required": false,
              "description": "If Jenkins reports an unstable build, treat that as a failure (normally treated as success)"
            },
            "build_start_timeout": {
              "type": "Integer",
              "value": 60,
              "label": "Build Start Timeout",
              "required": false,
              "description": "How long to wait for Jenkins to start building"
            },
            "cancel_on_build_start_timeout": {
              "type": "Boolean",
              "value": true,
              "label": "Cancel on Build Start Timeout?",
              "required": false,
              "description": "Attempt to cancel the build if Jenkins doesn't start building within the timeout"
            }
          },
          "position": 0,
          "name": "jenkins plugin",
          "is_from_parent": false,
          "created_at": "2014-02-17T22:08:24+00:00",
          "updated_at": "2014-03-15T10:50:41+00:00",
          "task_id": 27,
          "composition_id": 26,
          "sources": [
            {
              "name": "jenkins"
            }
          ]
        }
      ],
      "fail_type": null,
      "tasks": [
        {
          "id": 27,
          "name": "jenkins plugin",
          "description": "Run a set of work steps in Jenkins",
          "position": 1,
          "options": {
            "host": {
              "type": "String",
              "value": "localhost",
              "label": "Host",
              "required": true,
              "description": "Hostname of the Jenkins server"
            },
            "port": {
              "type": "Integer",
              "value": 8080,
              "label": "Port",
              "required": false,
              "description": "Port Jenkins is running on"
            },
            "job": {
              "type": "String",
              "value": "",
              "label": "Job",
              "required": true,
              "description": "Name of the Jenkins job"
            },
            "username": {
              "type": "String",
              "value": "",
              "label": "Username",
              "required": false,
              "description": "Username for jenkins server"
            },
            "password": {
              "type": "Password",
              "value": "",
              "label": "Password",
              "required": false,
              "description": "Password for jenkins server"
            },
            "use_ssl": {
              "type": "Boolean",
              "value": false,
              "label": "Use SSL?",
              "required": true,
              "description": "Use https when talking to Jenkins"
            },
            "web_path": {
              "type": "String",
              "value": "",
              "label": "Web Path",
              "required": false,
              "description": "Path of the Jenkins application on the server"
            },
            "scm_url": {
              "type": "Url",
              "value": "",
              "label": "SCM URL",
              "required": false,
              "description": "Url of the source code repository"
            },
            "parameters": {
              "type": "Array",
              "value": [

              ],
              "label": "Parameters",
              "required": false,
              "description": "Parameters to pass to the job. Name=value formatted."
            },
            "user_defined_axes": {
              "type": "Array",
              "value": [

              ],
              "label": "User Defined Axes",
              "required": false,
              "description": "User defined axes used for a configuration matrix project"
            },
            "label_axes": {
              "type": "Array",
              "value": [

              ],
              "label": "Label Axes",
              "required": false,
              "description": "Labels for a configuration matrix project"
            },
            "steps": {
              "type": "Array",
              "value": [

              ],
              "label": "Steps",
              "required": false,
              "description": "Set of steps to be executed by Jenkins"
            },
            "override_existing": {
              "type": "Boolean",
              "value": false,
              "label": "Override Existing?",
              "required": true,
              "description": "Overwrite existing jobs, or create if it does not exist"
            },
            "fail_on_unstable": {
              "type": "Boolean",
              "value": false,
              "label": "Fail on UNSTABLE",
              "required": false,
              "description": "If Jenkins reports an unstable build, treat that as a failure (normally treated as success)"
            },
            "build_start_timeout": {
              "type": "Integer",
              "value": 60,
              "label": "Build Start Timeout",
              "required": false,
              "description": "How long to wait for Jenkins to start building"
            },
            "cancel_on_build_start_timeout": {
              "type": "Boolean",
              "value": true,
              "label": "Cancel on Build Start Timeout?",
              "required": false,
              "description": "Attempt to cancel the build if Jenkins doesn't start building within the timeout"
            }
          },
          "type": "remote",
          "command": "/jenkinsplugin/build",
          "tool_name": [
            "Build"
          ],
          "code": null,
          "klass": "MaestroDev::Plugin::JenkinsWorker",
          "dependencies": null,
          "language": "ruby",
          "pom": null,
          "image": "jenkins.png",
          "tags": [
            "jenkins",
            "hudson"
          ],
          "created_at": "2014-02-07T16:36:36+00:00",
          "updated_at": "2014-02-13T21:03:28+00:00",
          "plugin_id": 76
        }
      ],
      "composition_configurations": [

      ]
    },
    {
      "id": 30,
      "name": "2 - Acceptance Tests (post Jenkins build)",
      "description": "Perform Automated tests in a clean virtual environment, then wait for QA to confirm",
      "schedule": "",
      "enabled": true,
      "state": null,
      "agent_facts": {

      },
      "tags": [

      ],
      "type": 1,
      "fail_on_cancel": false,
      "reuse_agent": true,
      "created_at": "2014-02-28T22:37:23+00:00",
      "updated_at": "2014-03-17T09:15:52+00:00",
      "max_queued_runs": 1,
      "max_concurrent_runs": 1,
      "agent_pool_id": 1,
      "on_error_id": 27,
      "parent_id": null,
      "composition_tasks": [
        {
          "id": 101,
          "options": {
            "username": {
              "type": "String",
              "required": false,
              "description": "Repository Username",
              "value": null
            },
            "password": {
              "type": "Password",
              "required": false,
              "description": "Repository Password",
              "value": null
            },
            "path": {
              "type": "String",
              "value": "/tmp",
              "required": true,
              "description": "Local Folder For File Download. File will be named $artifactId.$packaging"
            },
            "packaging": {
              "type": "String",
              "value": "war",
              "required": true,
              "description": "Artifact Packaging Type"
            },
            "url": {
              "type": "Url",
              "value": "http://localhost:8082/archiva/repository/snapshots/com/maestrodev/eval/maven-webapp/1.0-SNAPSHOT",
              "required": true,
              "description": "Remote Repository Location Of The Project Containing The Artifact, ie. http://localhost/repository/com/acme/foo/1.0-SNAPSHOT/"
            }
          },
          "position": 0,
          "name": "wget latest snapshot",
          "is_from_parent": false,
          "created_at": "2014-02-28T23:18:41+00:00",
          "updated_at": "2014-03-17T09:15:52+00:00",
          "task_id": 58,
          "composition_id": 30,
          "sources": [
            {
              "name": "Archiva"
            }
          ]
        },
        {
          "id": 102,
          "options": {
            "access_key_id": {
              "type": "String",
              "required": true,
              "description": "AWS access key id",
              "value": null
            },
            "secret_access_key": {
              "type": "Password",
              "required": true,
              "description": "AWS secret access key",
              "value": null
            },
            "region": {
              "type": "String",
              "value": "us-east-1",
              "required": false,
              "description": "AWS region identifier"
            },
            "availability_zone": {
              "type": "String",
              "required": false,
              "description": "AWS availability zone, ie. us-east-1a",
              "value": null
            },
            "image_id": {
              "type": "String",
              "value": "ami-b7706fde",
              "required": true,
              "description": "ami id of the image to use"
            },
            "flavor_id": {
              "type": "String",
              "value": "m1.small",
              "required": true,
              "description": "Flavor id that defines ram, cpu,..."
            },
            "key_name": {
              "type": "String",
              "required": false,
              "description": "AWS keypair name to use for the instance",
              "value": null
            },
            "groups": {
              "type": "Array",
              "value": [

              ],
              "required": false,
              "description": "the name of the security groups to add this VM to"
            },
            "user_data": {
              "type": "String",
              "required": false,
              "description": "user data to set for the instance",
              "value": null
            },
            "name": {
              "type": "String",
              "required": false,
              "description": "name of the started vm, a unique name will be generated if it already exists",
              "value": null
            },
            "number_of_vms": {
              "type": "Integer",
              "value": 1,
              "required": true,
              "description": "number of instances to start"
            },
            "private_key": {
              "type": "String",
              "required": false,
              "description": "ssh private key content to use to connect to the server",
              "value": null
            },
            "private_key_path": {
              "type": "String",
              "value": "~/.ssh/id_rsa",
              "required": false,
              "description": "ssh private key path in the agent to use to connect to the server (instead of private_key content)"
            },
            "ssh_commands": {
              "type": "Array",
              "value": [
                "sudo sed -i 's/localhost:8009\\//localhost:8009/' ~/stack/apache-tomcat/conf/tomcat.conf",
                "sudo sed -i 's/admin-gui\"/admin-gui,manager-script\"/' ~/stack/apache-tomcat/conf/tomcat-users.xml",
                "sudo /home/bitnami/stack/ctlscript.sh restart tomcat"
              ],
              "required": false,
              "description": "commands to execute in the server once it is started"
            },
            "ssh_user": {
              "type": "String",
              "value": "bitnami",
              "required": false,
              "description": "username to use for ssh connection"
            },
            "ssh_password": {
              "type": "Password",
              "required": false,
              "description": "password to use for ssh connections if not using the ssh key (keys take precedence)",
              "value": null
            },
            "timeout": {
              "type": "Integer",
              "value": 600,
              "required": false,
              "description": "number of seconds to wait for a server to be up"
            }
          },
          "position": 1,
          "name": "AWS provision",
          "is_from_parent": false,
          "created_at": "2014-02-28T23:25:40+00:00",
          "updated_at": "2014-03-17T09:15:53+00:00",
          "task_id": 31,
          "composition_id": 30,
          "sources": [
            {
              "name": "AWS Account"
            }
          ]
        },
        {
          "id": 103,
          "options": {
            "host": {
              "type": "String",
              "value": "#{fields[:cloud_ips].first}",
              "label": "Tomcat Host",
              "required": false,
              "description": "Hostname of the server running Tomcat (this field is only used if 'tomcat_root_url' does not contain a valid url)"
            },
            "port": {
              "type": "Integer",
              "value": 80,
              "label": "Tomcat Port",
              "required": false,
              "description": "Port Tomcat is bound to (this field is only used if 'tomcat_root_url' does not contain a valid url)"
            },
            "tomcat_root_url": {
              "type": "String",
              "value": "/",
              "label": "Tomcat URL",
              "required": true,
              "description": "Complete URL of Tomcat root page.  Alternatively, if 'host' and 'port' fields used, the path to Tomcat - usually '/')"
            },
            "path": {
              "type": "String",
              "value": "/tmp/maven-webapp.war",
              "label": "WAR file (local)",
              "required": true,
              "description": "Location of the WAR file (on local filesystem)"
            },
            "web_path": {
              "type": "String",
              "value": "/maven-webapp",
              "label": "Context Path (tomcat)",
              "required": true,
              "description": "Context path to deploy application to"
            },
            "user": {
              "type": "String",
              "value": "manager",
              "label": "Tomcat User",
              "required": true,
              "description": "Username that has manager role on Tomcat (do not include in 'tomcat_root_url' field as password would be visible)"
            },
            "password": {
              "type": "Password",
              "value": "bitnami",
              "label": "Tomcat Password",
              "required": true,
              "description": "Password for user that has manager role on Tomcat (do not include in 'tomcat_root_url' field as password would be visible)"
            },
            "max_connect_attempts": {
              "type": "Integer",
              "value": 5,
              "label": "Max Retries",
              "required": true,
              "description": "Number of times the task will attempt to connect to Tomcat"
            },
            "timeout": {
              "type": "Integer",
              "value": 90,
              "label": "Retry Delay",
              "required": true,
              "description": "How long to delay between connection retries"
            }
          },
          "position": 2,
          "name": "tomcat deploy",
          "is_from_parent": false,
          "created_at": "2014-02-28T23:25:40+00:00",
          "updated_at": "2014-03-17T09:15:55+00:00",
          "task_id": 63,
          "composition_id": 30,
          "sources": [

          ]
        },
        {
          "id": 136,
          "options": {
            "path": {
              "type": "String",
              "label": "Path",
              "required": false,
              "description": "Local path to clone the Git repository to. By default agent's $HOME/wc/composition_name-id and can be referred to with #{fields[:scm_path]} or #{fields[:git_path]}",
              "value": "/tmp/eval-demo-sauce-project"
            },
            "url": {
              "type": "Url",
              "label": "GIT URL",
              "required": true,
              "description": "Remote location of Git repository",
              "value": "https://github.com/maestrodev/eval-demo-sauce-project.git"
            },
            "branch": {
              "type": "String",
              "label": "Branch",
              "required": false,
              "description": "Branch to checkout",
              "value": null
            },
            "clean_working_copy": {
              "type": "Boolean",
              "value": false,
              "label": "Clean Working Copy?",
              "required": false,
              "description": "Remove local working copy before clone"
            },
            "force_build": {
              "type": "Boolean",
              "value": false,
              "label": "Force Build?",
              "required": false,
              "description": "Build if no changes detected?"
            },
            "enable_repo_trigger": {
              "type": "Boolean",
              "value": false,
              "label": "Enable Repo Trigger?",
              "required": false,
              "description": "Auto-Build this composition if repository trigger fired"
            }
          },
          "position": 3,
          "name": "git clone",
          "is_from_parent": false,
          "created_at": "2014-03-17T09:07:41+00:00",
          "updated_at": "2014-03-17T09:15:56+00:00",
          "task_id": 51,
          "composition_id": 30,
          "sources": [

          ]
        },
        {
          "id": 137,
          "options": {
            "path": {
              "type": "String",
              "required": false,
              "description": "Location To Run Maven",
              "value": "/tmp/eval-demo-sauce-project"
            },
            "goals": {
              "type": "Array",
              "value": [
                "test"
              ],
              "required": true,
              "description": "Set of Maven goals"
            },
            "environment": {
              "type": "String",
              "value": "",
              "required": false,
              "description": "Environment Variables"
            },
            "settingsfile": {
              "type": "String",
              "value": "",
              "required": false,
              "description": "Location of a Maven settings.xml file"
            },
            "profiles": {
              "type": "Array",
              "value": [

              ],
              "required": false,
              "description": "Profiles To Activate"
            },
            "properties": {
              "type": "Array",
              "value": [
                "SAUCE_USER_NAME=xxx",
                "SAUCE_API_KEY=xxx",
                "appUrl=http://#{fields[:cloud_ips].first}/maven-webapp/"
              ],
              "required": false,
              "description": "Settings To Pass Maven"
            }
          },
          "position": 4,
          "name": "maven",
          "is_from_parent": false,
          "created_at": "2014-03-17T09:07:41+00:00",
          "updated_at": "2014-03-17T09:15:58+00:00",
          "task_id": 57,
          "composition_id": 30,
          "sources": [

          ]
        },
        {
          "id": 105,
          "options": {
            "body": {
              "label": "Message",
              "description": "The message to be displayed in the action list",
              "required": true,
              "type": "String",
              "value": "Automated tests complete.  Please confirm correct operation, then click the check-mark"
            },
            "fail_on_cancel": {
              "label": "Fail if declined?",
              "description": "If the user declines the action, fail the composition (otherwise it will continue)",
              "required": false,
              "type": "Boolean",
              "value": false
            }
          },
          "position": 5,
          "name": "confirmation",
          "is_from_parent": false,
          "created_at": "2014-02-28T23:25:41+00:00",
          "updated_at": "2014-03-17T09:15:55+00:00",
          "task_id": 73,
          "composition_id": 30,
          "sources": [

          ]
        },
        {
          "id": 106,
          "options": {
            "access_key_id": {
              "type": "String",
              "required": false,
              "description": "AWS access key id",
              "value": null
            },
            "secret_access_key": {
              "type": "Password",
              "required": false,
              "description": "AWS secret access key",
              "value": null
            },
            "region": {
              "type": "String",
              "required": false,
              "description": "AWS region identifier",
              "value": null
            },
            "instance_ids": {
              "type": "Array",
              "value": [

              ],
              "required": false,
              "description": "ids or names of instances to deprovision. If not set it will deprovision the vms provisioned in previous steps"
            }
          },
          "position": 6,
          "name": "AWS deprovision",
          "is_from_parent": false,
          "created_at": "2014-02-28T23:25:41+00:00",
          "updated_at": "2014-03-17T09:15:55+00:00",
          "task_id": 38,
          "composition_id": 30,
          "sources": [
            {
              "name": "AWS Account"
            }
          ]
        }
      ],
      "fail_type": null,
      "on_error_composition": {
        "name": "2a - Acceptance Tests Failed [jenkins]"
      },
      "tasks": [
        {
          "id": 31,
          "name": "AWS provision",
          "description": "Provision servers on Amazon Web Services EC2",
          "position": 1,
          "options": {
            "access_key_id": {
              "type": "String",
              "required": true,
              "description": "AWS access key id"
            },
            "secret_access_key": {
              "type": "Password",
              "required": true,
              "description": "AWS secret access key"
            },
            "region": {
              "type": "String",
              "value": "us-east-1",
              "required": false,
              "description": "AWS region identifier"
            },
            "availability_zone": {
              "type": "String",
              "required": false,
              "description": "AWS availability zone, ie. us-east-1a"
            },
            "image_id": {
              "type": "String",
              "value": "ami-1624987f",
              "required": true,
              "description": "ami id of the image to use"
            },
            "flavor_id": {
              "type": "String",
              "value": "t1.micro",
              "required": true,
              "description": "Flavor id that defines ram, cpu,..."
            },
            "key_name": {
              "type": "String",
              "required": false,
              "description": "AWS keypair name to use for the instance"
            },
            "groups": {
              "type": "Array",
              "value": [

              ],
              "required": false,
              "description": "the name of the security groups to add this VM to"
            },
            "user_data": {
              "type": "String",
              "required": false,
              "description": "user data to set for the instance"
            },
            "name": {
              "type": "String",
              "required": false,
              "description": "name of the started vm, a unique name will be generated if it already exists"
            },
            "number_of_vms": {
              "type": "Integer",
              "value": 1,
              "required": true,
              "description": "number of instances to start"
            },
            "private_key": {
              "type": "String",
              "required": false,
              "description": "ssh private key content to use to connect to the server"
            },
            "private_key_path": {
              "type": "String",
              "value": "~/.ssh/id_rsa",
              "required": false,
              "description": "ssh private key path in the agent to use to connect to the server (instead of private_key content)"
            },
            "ssh_commands": {
              "type": "Array",
              "value": [

              ],
              "required": false,
              "description": "commands to execute in the server once it is started"
            },
            "ssh_user": {
              "type": "String",
              "value": "root",
              "required": false,
              "description": "username to use for ssh connection"
            },
            "ssh_password": {
              "type": "Password",
              "required": false,
              "description": "password to use for ssh connections if not using the ssh key (keys take precedence)"
            },
            "timeout": {
              "type": "Integer",
              "value": 600,
              "required": false,
              "description": "number of seconds to wait for a server to be up"
            }
          },
          "type": "remote",
          "command": "/aws/provision",
          "tool_name": [
            "Cloud"
          ],
          "code": null,
          "klass": "MaestroDev::Plugin::AwsWorker",
          "dependencies": null,
          "language": "ruby",
          "pom": null,
          "image": "aws.png",
          "tags": [

          ],
          "created_at": "2014-02-07T16:36:38+00:00",
          "updated_at": "2014-02-07T16:36:38+00:00",
          "plugin_id": 32
        },
        {
          "id": 38,
          "name": "AWS deprovision",
          "description": "Deprovision servers on Amazon Web Services EC2. Deprovisions all servers started in a previous provision tasks.",
          "position": 1,
          "options": {
            "access_key_id": {
              "type": "String",
              "required": false,
              "description": "AWS access key id"
            },
            "secret_access_key": {
              "type": "Password",
              "required": false,
              "description": "AWS secret access key"
            },
            "region": {
              "type": "String",
              "required": false,
              "description": "AWS region identifier"
            },
            "instance_ids": {
              "type": "Array",
              "value": [

              ],
              "required": false,
              "description": "ids or names of instances to deprovision. If not set it will deprovision the vms provisioned in previous steps"
            }
          },
          "type": "remote",
          "command": "/aws/deprovision",
          "tool_name": [
            "Cloud"
          ],
          "code": null,
          "klass": "MaestroDev::Plugin::AwsWorker",
          "dependencies": null,
          "language": "ruby",
          "pom": null,
          "image": "aws.png",
          "tags": [

          ],
          "created_at": "2014-02-07T16:36:41+00:00",
          "updated_at": "2014-02-07T16:36:41+00:00",
          "plugin_id": 39
        },
        {
          "id": 51,
          "name": "git clone",
          "description": "Clone a Git repository",
          "position": 1,
          "options": {
            "path": {
              "type": "String",
              "label": "Path",
              "required": false,
              "description": "Local path to clone the Git repository to. By default agent's $HOME/wc/composition_name-id and can be referred to with #{fields[:scm_path]} or #{fields[:git_path]}"
            },
            "url": {
              "type": "Url",
              "label": "GIT URL",
              "required": true,
              "description": "Remote location of Git repository"
            },
            "branch": {
              "type": "String",
              "label": "Branch",
              "required": false,
              "description": "Branch to checkout"
            },
            "clean_working_copy": {
              "type": "Boolean",
              "value": false,
              "label": "Clean Working Copy?",
              "required": false,
              "description": "Remove local working copy before clone"
            },
            "force_build": {
              "type": "Boolean",
              "value": false,
              "label": "Force Build?",
              "required": false,
              "description": "Build if no changes detected?"
            },
            "enable_repo_trigger": {
              "type": "Boolean",
              "value": false,
              "label": "Enable Repo Trigger?",
              "required": false,
              "description": "Auto-Build this composition if repository trigger fired"
            }
          },
          "type": "remote",
          "command": "/git/clone",
          "tool_name": [
            "SCM"
          ],
          "code": null,
          "klass": "MaestroDev::Plugin::GitWorker",
          "dependencies": null,
          "language": "ruby",
          "pom": null,
          "image": "git.png",
          "tags": [
            "git",
            "scm",
            "rcs",
            "vcs"
          ],
          "created_at": "2014-02-07T16:36:48+00:00",
          "updated_at": "2014-03-15T10:50:29+00:00",
          "plugin_id": 78
        },
        {
          "id": 57,
          "name": "maven",
          "description": "Run A Maven Task",
          "position": 1,
          "options": {
            "path": {
              "type": "String",
              "required": false,
              "description": "Location To Run Maven"
            },
            "goals": {
              "type": "Array",
              "value": [

              ],
              "required": true,
              "description": "Set of Maven goals"
            },
            "environment": {
              "type": "String",
              "value": "",
              "required": false,
              "description": "Environment Variables"
            },
            "settingsfile": {
              "type": "String",
              "value": "",
              "required": false,
              "description": "Location of a Maven settings.xml file"
            },
            "profiles": {
              "type": "Array",
              "value": [

              ],
              "required": false,
              "description": "Profiles To Activate"
            },
            "properties": {
              "type": "Array",
              "value": [

              ],
              "required": false,
              "description": "Settings To Pass Maven"
            }
          },
          "type": "remote",
          "command": "/maven/execute",
          "tool_name": [
            "Shell"
          ],
          "code": null,
          "klass": "MaestroDev::Plugin::MavenWorker",
          "dependencies": null,
          "language": "ruby",
          "pom": null,
          "image": "maven.png",
          "tags": [

          ],
          "created_at": "2014-02-07T16:36:50+00:00",
          "updated_at": "2014-02-07T16:36:50+00:00",
          "plugin_id": 58
        },
        {
          "id": 58,
          "name": "wget latest snapshot",
          "description": "Downloads The Latest Snapshot From A Maven Artifact Repository Using Wget",
          "position": 1,
          "options": {
            "username": {
              "type": "String",
              "required": false,
              "description": "Repository Username"
            },
            "password": {
              "type": "Password",
              "required": false,
              "description": "Repository Password"
            },
            "path": {
              "type": "String",
              "value": "/tmp",
              "required": true,
              "description": "Local Folder For File Download. File will be named $artifactId.$packaging"
            },
            "packaging": {
              "type": "String",
              "value": "jar",
              "required": true,
              "description": "Artifact Packaging Type"
            },
            "url": {
              "type": "Url",
              "value": "http://localhost/repository/com/acme/foo/1.0-SNAPSHOT/",
              "required": true,
              "description": "Remote Repository Location Of The Project Containing The Artifact, ie. http://localhost/repository/com/acme/foo/1.0-SNAPSHOT/"
            }
          },
          "type": "remote",
          "command": "/maven/wget_latest_snapshot",
          "tool_name": [
            "Deploy"
          ],
          "code": null,
          "klass": "MaestroDev::Plugin::MavenWorker",
          "dependencies": null,
          "language": "ruby",
          "pom": null,
          "image": "maven.png",
          "tags": [

          ],
          "created_at": "2014-02-07T16:36:50+00:00",
          "updated_at": "2014-02-07T16:36:50+00:00",
          "plugin_id": 59
        },
        {
          "id": 63,
          "name": "tomcat deploy",
          "description": "Deploy A Web Application To Tomcat With A Given Context",
          "position": 1,
          "options": {
            "host": {
              "type": "String",
              "value": "localhost",
              "label": "Tomcat Host",
              "required": false,
              "description": "Hostname of the server running Tomcat (this field is only used if 'tomcat_root_url' does not contain a valid url)"
            },
            "port": {
              "type": "Integer",
              "value": 8080,
              "label": "Tomcat Port",
              "required": false,
              "description": "Port Tomcat is bound to (this field is only used if 'tomcat_root_url' does not contain a valid url)"
            },
            "tomcat_root_url": {
              "type": "String",
              "value": "/",
              "label": "Tomcat URL",
              "required": true,
              "description": "Complete URL of Tomcat root page.  Alternatively, if 'host' and 'port' fields used, the path to Tomcat - usually '/')"
            },
            "path": {
              "type": "String",
              "value": "",
              "label": "WAR file (local)",
              "required": true,
              "description": "Location of the WAR file (on local filesystem)"
            },
            "web_path": {
              "type": "String",
              "value": "",
              "label": "Context Path (tomcat)",
              "required": true,
              "description": "Context path to deploy application to"
            },
            "user": {
              "type": "String",
              "value": "",
              "label": "Tomcat User",
              "required": true,
              "description": "Username that has manager role on Tomcat (do not include in 'tomcat_root_url' field as password would be visible)"
            },
            "password": {
              "type": "Password",
              "value": "",
              "label": "Tomcat Password",
              "required": true,
              "description": "Password for user that has manager role on Tomcat (do not include in 'tomcat_root_url' field as password would be visible)"
            },
            "max_connect_attempts": {
              "type": "Integer",
              "value": 5,
              "label": "Max Retries",
              "required": true,
              "description": "Number of times the task will attempt to connect to Tomcat"
            },
            "timeout": {
              "type": "Integer",
              "value": 90,
              "label": "Retry Delay",
              "required": true,
              "description": "How long to delay between connection retries"
            }
          },
          "type": "remote",
          "command": "/tomcat/deploy",
          "tool_name": [
            "Deploy"
          ],
          "code": null,
          "klass": "MaestroDev::Plugin::TomcatWorker",
          "dependencies": null,
          "language": "ruby",
          "pom": null,
          "image": "tomcat.png",
          "tags": [

          ],
          "created_at": "2014-02-07T16:36:52+00:00",
          "updated_at": "2014-03-15T10:49:55+00:00",
          "plugin_id": 64
        },
        {
          "id": 73,
          "name": "confirmation",
          "description": "Allows user confirmation before continuing.  A notification will be displayed in the User Interface.  Confirming will allow the composition to continue, rejecting will cancel the composition if configured",
          "position": 1,
          "options": {
            "body": {
              "label": "Message",
              "description": "The message to be displayed in the action list",
              "required": true,
              "type": "String",
              "value": ""
            },
            "fail_on_cancel": {
              "label": "Fail if declined?",
              "description": "If the user declines the action, fail the composition (otherwise it will continue)",
              "required": false,
              "type": "Boolean",
              "value": false
            }
          },
          "type": "confirmation",
          "command": "/confirmation/work",
          "tool_name": [
            "Actions"
          ],
          "code": null,
          "klass": null,
          "dependencies": null,
          "language": null,
          "pom": null,
          "image": "confirm.png",
          "tags": [
            "maestro",
            "user",
            "continue",
            "pause"
          ],
          "created_at": "2014-02-07T16:36:56+00:00",
          "updated_at": "2014-03-16T23:27:14+00:00",
          "plugin_id": null
        }
      ],
      "composition_configurations": [

      ]
    },
    {
      "id": 27,
      "name": "2a - Acceptance Tests Failed [jenkins]",
      "description": "The Acceptance Tests must have failed - clean up and send an email",
      "schedule": "",
      "enabled": true,
      "state": null,
      "agent_facts": {

      },
      "tags": [

      ],
      "type": 1,
      "fail_on_cancel": false,
      "reuse_agent": true,
      "created_at": "2014-02-28T23:51:31+00:00",
      "updated_at": "2014-03-17T05:45:43+00:00",
      "max_queued_runs": 1,
      "max_concurrent_runs": 1,
      "agent_pool_id": 1,
      "on_error_id": null,
      "parent_id": null,
      "composition_tasks": [
        {
          "id": 134,
          "options": {
            "body": {
              "label": "Message",
              "description": "The message to be displayed in the action list",
              "required": true,
              "type": "String",
              "value": "Ready to deprovision instance due to failure: please troubleshoot failure and then confirm"
            },
            "fail_on_cancel": {
              "label": "Fail if declined?",
              "description": "If the user declines the action, fail the composition (otherwise it will continue)",
              "required": false,
              "type": "Boolean",
              "value": false
            }
          },
          "position": 0,
          "name": "confirmation",
          "is_from_parent": false,
          "created_at": "2014-03-17T05:45:44+00:00",
          "updated_at": "2014-03-17T05:45:44+00:00",
          "task_id": 73,
          "composition_id": 27,
          "sources": [

          ]
        },
        {
          "id": 94,
          "options": {
            "access_key_id": {
              "type": "String",
              "required": false,
              "description": "AWS access key id",
              "value": null
            },
            "secret_access_key": {
              "type": "Password",
              "required": false,
              "description": "AWS secret access key",
              "value": null
            },
            "region": {
              "type": "String",
              "required": false,
              "description": "AWS region identifier",
              "value": null
            },
            "instance_ids": {
              "type": "Array",
              "value": [
                "#{context_inputs[:servers].first['id']}"
              ],
              "required": false,
              "description": "ids or names of instances to deprovision. If not set it will deprovision the vms provisioned in previous steps"
            }
          },
          "position": 1,
          "name": "AWS deprovision",
          "is_from_parent": false,
          "created_at": "2014-02-28T23:52:57+00:00",
          "updated_at": "2014-03-17T05:45:43+00:00",
          "task_id": 38,
          "composition_id": 27,
          "sources": [
            {
              "name": "AWS Account"
            }
          ]
        },
        {
          "id": 95,
          "options": {
            "server": {
              "label": "Server",
              "description": "Delivery server",
              "required": false,
              "type": "String",
              "value": "localhost"
            },
            "port": {
              "label": "Port",
              "description": "Delivery port",
              "required": false,
              "type": "Integer",
              "value": 25
            },
            "ssl": {
              "label": "Use SSL?",
              "description": "Use SSL Encryption",
              "required": true,
              "type": "Boolean",
              "value": false
            },
            "domain": {
              "label": "Domain",
              "description": "Delivery domain",
              "required": false,
              "type": "String",
              "value": "localhost"
            },
            "from": {
              "label": "From",
              "description": "From email address",
              "required": true,
              "type": "String",
              "value": "jenkins_acceptance@localhost"
            },
            "from_name": {
              "label": "From Name",
              "description": "Human readable name the message is from",
              "required": true,
              "type": "String",
              "value": "Jenkins Acceptance Tests"
            },
            "use_authentication": {
              "label": "Authentication Required?",
              "description": "Use username and password to authenticate on mailserver",
              "required": false,
              "type": "Boolean",
              "value": false
            },
            "user": {
              "label": "Username",
              "description": "Username for server",
              "required": false,
              "type": "String",
              "value": ""
            },
            "pass": {
              "label": "Password",
              "description": "Password for server",
              "required": false,
              "type": "Password",
              "value": ""
            },
            "body": {
              "label": "Content",
              "description": "Message content (body)",
              "required": true,
              "type": "Text",
              "value": "The acceptance tests have failed, the sky is falling - but we did deprovision the AWS server, so you won't have to worry about paying for that"
            },
            "subject": {
              "label": "Subject",
              "description": "Message subject",
              "required": true,
              "type": "String",
              "value": "Acceptance Tests (Java [jenkins]) Failure"
            },
            "to": {
              "label": "To",
              "description": "Recipient email address",
              "required": true,
              "type": "String",
              "value": "root@localhost"
            },
            "cc": {
              "label": "CC",
              "description": "Recipient CC email address",
              "required": false,
              "type": "String",
              "value": ""
            },
            "bcc": {
              "label": "BCC",
              "description": "Recipient BCC email address",
              "required": false,
              "type": "String",
              "value": ""
            },
            "file": {
              "label": "File to attach",
              "description": "File path for file to attach to the message",
              "required": false,
              "type": "String",
              "value": ""
            }
          },
          "position": 2,
          "name": "email",
          "is_from_parent": false,
          "created_at": "2014-02-28T23:52:58+00:00",
          "updated_at": "2014-03-17T05:45:44+00:00",
          "task_id": 74,
          "composition_id": 27,
          "sources": [

          ]
        }
      ],
      "fail_type": null,
      "tasks": [
        {
          "id": 38,
          "name": "AWS deprovision",
          "description": "Deprovision servers on Amazon Web Services EC2. Deprovisions all servers started in a previous provision tasks.",
          "position": 1,
          "options": {
            "access_key_id": {
              "type": "String",
              "required": false,
              "description": "AWS access key id"
            },
            "secret_access_key": {
              "type": "Password",
              "required": false,
              "description": "AWS secret access key"
            },
            "region": {
              "type": "String",
              "required": false,
              "description": "AWS region identifier"
            },
            "instance_ids": {
              "type": "Array",
              "value": [

              ],
              "required": false,
              "description": "ids or names of instances to deprovision. If not set it will deprovision the vms provisioned in previous steps"
            }
          },
          "type": "remote",
          "command": "/aws/deprovision",
          "tool_name": [
            "Cloud"
          ],
          "code": null,
          "klass": "MaestroDev::Plugin::AwsWorker",
          "dependencies": null,
          "language": "ruby",
          "pom": null,
          "image": "aws.png",
          "tags": [

          ],
          "created_at": "2014-02-07T16:36:41+00:00",
          "updated_at": "2014-02-07T16:36:41+00:00",
          "plugin_id": 39
        },
        {
          "id": 73,
          "name": "confirmation",
          "description": "Allows user confirmation before continuing.  A notification will be displayed in the User Interface.  Confirming will allow the composition to continue, rejecting will cancel the composition if configured",
          "position": 1,
          "options": {
            "body": {
              "label": "Message",
              "description": "The message to be displayed in the action list",
              "required": true,
              "type": "String",
              "value": ""
            },
            "fail_on_cancel": {
              "label": "Fail if declined?",
              "description": "If the user declines the action, fail the composition (otherwise it will continue)",
              "required": false,
              "type": "Boolean",
              "value": false
            }
          },
          "type": "confirmation",
          "command": "/confirmation/work",
          "tool_name": [
            "Actions"
          ],
          "code": null,
          "klass": null,
          "dependencies": null,
          "language": null,
          "pom": null,
          "image": "confirm.png",
          "tags": [
            "maestro",
            "user",
            "continue",
            "pause"
          ],
          "created_at": "2014-02-07T16:36:56+00:00",
          "updated_at": "2014-03-16T23:27:14+00:00",
          "plugin_id": null
        },
        {
          "id": 74,
          "name": "email",
          "description": "Send an email",
          "position": 1,
          "options": {
            "server": {
              "label": "Server",
              "description": "Delivery server",
              "required": false,
              "type": "String",
              "value": "localhost"
            },
            "port": {
              "label": "Port",
              "description": "Delivery port",
              "required": false,
              "type": "Integer",
              "value": 25
            },
            "ssl": {
              "label": "Use SSL?",
              "description": "Use SSL Encryption",
              "required": true,
              "type": "Boolean",
              "value": true
            },
            "domain": {
              "label": "Domain",
              "description": "Delivery domain",
              "required": false,
              "type": "String",
              "value": "localhost"
            },
            "from": {
              "label": "From",
              "description": "From email address",
              "required": true,
              "type": "String",
              "value": ""
            },
            "from_name": {
              "label": "From Name",
              "description": "Human readable name the message is from",
              "required": true,
              "type": "String",
              "value": ""
            },
            "use_authentication": {
              "label": "Authentication Required?",
              "description": "Use username and password to authenticate on mailserver",
              "required": false,
              "type": "Boolean",
              "value": false
            },
            "user": {
              "label": "Username",
              "description": "Username for server",
              "required": false,
              "type": "String",
              "value": ""
            },
            "pass": {
              "label": "Password",
              "description": "Password for server",
              "required": false,
              "type": "Password",
              "value": ""
            },
            "body": {
              "label": "Content",
              "description": "Message content (body)",
              "required": true,
              "type": "Text",
              "value": ""
            },
            "subject": {
              "label": "Subject",
              "description": "Message subject",
              "required": true,
              "type": "String",
              "value": ""
            },
            "to": {
              "label": "To",
              "description": "Recipient email address",
              "required": true,
              "type": "String",
              "value": ""
            },
            "cc": {
              "label": "CC",
              "description": "Recipient CC email address",
              "required": false,
              "type": "String",
              "value": ""
            },
            "bcc": {
              "label": "BCC",
              "description": "Recipient BCC email address",
              "required": false,
              "type": "String",
              "value": ""
            },
            "file": {
              "label": "File to attach",
              "description": "File path for file to attach to the message",
              "required": false,
              "type": "String",
              "value": ""
            }
          },
          "type": "email",
          "command": "/email/notify",
          "tool_name": [
            "Notification"
          ],
          "code": null,
          "klass": null,
          "dependencies": null,
          "language": null,
          "pom": null,
          "image": "email.png",
          "tags": [
            "maestro"
          ],
          "created_at": "2014-02-07T16:36:56+00:00",
          "updated_at": "2014-03-16T23:27:21+00:00",
          "plugin_id": null
        }
      ],
      "composition_configurations": [

      ]
    },
    {
      "id": 28,
      "name": "* - Standard Build + Acceptance Tests",
      "description": "Run the Jenkins Build which include selenium tests, then run the Acceptance Tests",
      "schedule": "",
      "enabled": true,
      "state": null,
      "agent_facts": {

      },
      "tags": [

      ],
      "type": 1,
      "fail_on_cancel": false,
      "reuse_agent": true,
      "created_at": "2014-02-28T23:54:41+00:00",
      "updated_at": "2014-03-15T10:50:44+00:00",
      "max_queued_runs": 1,
      "max_concurrent_runs": 1,
      "agent_pool_id": 1,
      "on_error_id": null,
      "parent_id": null,
      "composition_tasks": [
        {
          "id": 96,
          "options": {
            "composition": {
              "label": "Composition",
              "description": "Composition name or id to be scheduled",
              "required": true,
              "type": "String",
              "value": "1 - Standard Jenkins Build"
            },
            "wait_for_completion": {
              "label": "Wait until complete?",
              "description": "Pause this Composition until completion of the scheduled composition",
              "required": false,
              "type": "Boolean",
              "value": true
            },
            "Force Schedule Build": {
              "label": "Force Schedule Build",
              "description": "Force build the scheduled composition",
              "required": true,
              "type": "Boolean",
              "value": true
            }
          },
          "position": 0,
          "name": "schedule",
          "is_from_parent": false,
          "created_at": "2014-02-28T23:56:06+00:00",
          "updated_at": "2014-03-16T23:27:11+00:00",
          "task_id": 76,
          "composition_id": 28,
          "sources": [

          ]
        },
        {
          "id": 97,
          "options": {
            "composition": {
              "label": "Composition",
              "description": "Composition name or id to be scheduled",
              "required": true,
              "type": "String",
              "value": "2 - Acceptance Tests (post Jenkins build)"
            },
            "wait_for_completion": {
              "label": "Wait until complete?",
              "description": "Pause this Composition until completion of the scheduled composition",
              "required": false,
              "type": "Boolean",
              "value": true
            },
            "Force Schedule Build": {
              "label": "Force Schedule Build",
              "description": "Force build the scheduled composition",
              "required": true,
              "type": "Boolean",
              "value": true
            }
          },
          "position": 1,
          "name": "schedule",
          "is_from_parent": false,
          "created_at": "2014-02-28T23:56:06+00:00",
          "updated_at": "2014-03-16T23:27:11+00:00",
          "task_id": 76,
          "composition_id": 28,
          "sources": [

          ]
        }
      ],
      "fail_type": null,
      "tasks": [
        {
          "id": 76,
          "name": "schedule",
          "description": "Schedule a single composition to execute",
          "position": 5,
          "options": {
            "composition": {
              "label": "Composition",
              "description": "Composition name or id to be scheduled",
              "required": true,
              "type": "String",
              "value": ""
            },
            "wait_for_completion": {
              "label": "Wait until complete?",
              "description": "Pause this Composition until completion of the scheduled composition",
              "required": false,
              "type": "Boolean",
              "value": false
            },
            "Force Schedule Build": {
              "label": "Force Schedule Build",
              "description": "Force build the scheduled composition",
              "required": true,
              "type": "Boolean",
              "value": true
            }
          },
          "type": "schedule",
          "command": "/schedule/schedule_single",
          "tool_name": [
            "Management"
          ],
          "code": null,
          "klass": null,
          "dependencies": null,
          "language": null,
          "pom": null,
          "image": "fork.png",
          "tags": [
            "maestro",
            "fork",
            "schedule"
          ],
          "created_at": "2014-02-07T16:36:56+00:00",
          "updated_at": "2014-03-16T23:27:08+00:00",
          "plugin_id": null
        }
      ],
      "composition_configurations": [

      ],
      "sources": [

      ]
    },
    {
      "id": 29,
      "name": "3 - Deploy",
      "description": "Deploy the app to production",
      "schedule": "",
      "enabled": true,
      "state": null,
      "agent_facts": {

      },
      "tags": [

      ],
      "type": 1,
      "fail_on_cancel": false,
      "reuse_agent": true,
      "created_at": "2014-03-01T01:41:00+00:00",
      "updated_at": "2014-03-16T23:49:51+00:00",
      "max_queued_runs": 1,
      "max_concurrent_runs": 1,
      "agent_pool_id": 1,
      "on_error_id": null,
      "parent_id": null,
      "composition_tasks": [
        {
          "id": 98,
          "options": {
            "username": {
              "type": "String",
              "required": false,
              "description": "Repository Username",
              "value": null
            },
            "password": {
              "type": "Password",
              "required": false,
              "description": "Repository Password",
              "value": null
            },
            "path": {
              "type": "String",
              "value": "/tmp",
              "required": true,
              "description": "Local Folder For File Download. File will be named $artifactId.$packaging"
            },
            "packaging": {
              "type": "String",
              "value": "war",
              "required": true,
              "description": "Artifact Packaging Type"
            },
            "url": {
              "type": "Url",
              "value": "http://localhost:8082/archiva/repository/snapshots/com/maestrodev/eval/maven-webapp/1.0-SNAPSHOT",
              "required": true,
              "description": "Remote Repository Location Of The Project Containing The Artifact, ie. http://localhost/repository/com/acme/foo/1.0-SNAPSHOT/"
            }
          },
          "position": 0,
          "name": "wget latest snapshot",
          "is_from_parent": false,
          "created_at": "2014-03-01T01:42:52+00:00",
          "updated_at": "2014-03-16T23:49:53+00:00",
          "task_id": 58,
          "composition_id": 29,
          "sources": [
            {
              "name": "Archiva"
            }
          ]
        },
        {
          "id": 99,
          "options": {
            "host": {
              "type": "String",
              "value": "",
              "label": "Tomcat Host",
              "required": false,
              "description": "Hostname of the server running Tomcat (this field is only used if 'tomcat_root_url' does not contain a valid url)"
            },
            "port": {
              "type": "Integer",
              "value": null,
              "label": "Tomcat Port",
              "required": false,
              "description": "Port Tomcat is bound to (this field is only used if 'tomcat_root_url' does not contain a valid url)"
            },
            "tomcat_root_url": {
              "type": "String",
              "value": "http://localhost:8484/",
              "label": "Tomcat URL",
              "required": true,
              "description": "Complete URL of Tomcat root page.  Alternatively, if 'host' and 'port' fields used, the path to Tomcat - usually '/')"
            },
            "path": {
              "type": "String",
              "value": "/tmp/maven-webapp.war",
              "label": "WAR file (local)",
              "required": true,
              "description": "Location of the WAR file (on local filesystem)"
            },
            "web_path": {
              "type": "String",
              "value": "/jenkins_hello",
              "label": "Context Path (tomcat)",
              "required": true,
              "description": "Context path to deploy application to"
            },
            "user": {
              "type": "String",
              "value": "tomcat",
              "label": "Tomcat User",
              "required": true,
              "description": "Username that has manager role on Tomcat (do not include in 'tomcat_root_url' field as password would be visible)"
            },
            "password": {
              "type": "Password",
              "value": "password",
              "label": "Tomcat Password",
              "required": true,
              "description": "Password for user that has manager role on Tomcat (do not include in 'tomcat_root_url' field as password would be visible)"
            },
            "max_connect_attempts": {
              "type": "Integer",
              "value": 5,
              "label": "Max Retries",
              "required": true,
              "description": "Number of times the task will attempt to connect to Tomcat"
            },
            "timeout": {
              "type": "Integer",
              "value": 90,
              "label": "Retry Delay",
              "required": true,
              "description": "How long to delay between connection retries"
            }
          },
          "position": 1,
          "name": "tomcat deploy",
          "is_from_parent": false,
          "created_at": "2014-03-01T01:42:53+00:00",
          "updated_at": "2014-03-16T23:49:53+00:00",
          "task_id": 63,
          "composition_id": 29,
          "sources": [

          ]
        },
        {
          "id": 100,
          "options": {
            "url": {
              "type": "String",
              "value": "https://localhost/tomcat/jenkins_hello/",
              "required": true,
              "description": "URL of Resource"
            },
            "user": {
              "type": "String",
              "value": "",
              "required": false,
              "description": "Username For Application Server"
            },
            "password": {
              "type": "Password",
              "value": "",
              "required": false,
              "description": "Password For Application User"
            },
            "timeout": {
              "type": "Integer",
              "value": 60,
              "required": false,
              "description": "Time To Wait For Connection Response"
            },
            "content_type": {
              "type": "String",
              "value": "text/html",
              "required": false,
              "description": "HTTP content type to place in Accept header"
            }
          },
          "position": 2,
          "name": "REST GET",
          "is_from_parent": false,
          "created_at": "2014-03-01T01:43:55+00:00",
          "updated_at": "2014-03-16T23:49:53+00:00",
          "task_id": 2,
          "composition_id": 29,
          "sources": [

          ]
        }
      ],
      "fail_type": null,
      "tasks": [
        {
          "id": 2,
          "name": "REST GET",
          "description": "GET a specified resource from a server",
          "position": 1,
          "options": {
            "url": {
              "type": "String",
              "value": "/",
              "required": true,
              "description": "URL of Resource"
            },
            "user": {
              "type": "String",
              "value": "",
              "required": false,
              "description": "Username For Application Server"
            },
            "password": {
              "type": "Password",
              "value": "",
              "required": false,
              "description": "Password For Application User"
            },
            "timeout": {
              "type": "Integer",
              "value": 60,
              "required": false,
              "description": "Time To Wait For Connection Response"
            },
            "content_type": {
              "type": "String",
              "value": "application/json",
              "required": false,
              "description": "HTTP content type to place in Accept header"
            }
          },
          "type": "remote",
          "command": "/rest/rest_get",
          "tool_name": [
            "Deploy"
          ],
          "code": null,
          "klass": "MaestroDev::Plugin::RestWorker",
          "dependencies": null,
          "language": "ruby",
          "pom": null,
          "image": "globe.png",
          "tags": [

          ],
          "created_at": "2014-02-07T16:36:23+00:00",
          "updated_at": "2014-02-07T16:36:23+00:00",
          "plugin_id": 2
        },
        {
          "id": 58,
          "name": "wget latest snapshot",
          "description": "Downloads The Latest Snapshot From A Maven Artifact Repository Using Wget",
          "position": 1,
          "options": {
            "username": {
              "type": "String",
              "required": false,
              "description": "Repository Username"
            },
            "password": {
              "type": "Password",
              "required": false,
              "description": "Repository Password"
            },
            "path": {
              "type": "String",
              "value": "/tmp",
              "required": true,
              "description": "Local Folder For File Download. File will be named $artifactId.$packaging"
            },
            "packaging": {
              "type": "String",
              "value": "jar",
              "required": true,
              "description": "Artifact Packaging Type"
            },
            "url": {
              "type": "Url",
              "value": "http://localhost/repository/com/acme/foo/1.0-SNAPSHOT/",
              "required": true,
              "description": "Remote Repository Location Of The Project Containing The Artifact, ie. http://localhost/repository/com/acme/foo/1.0-SNAPSHOT/"
            }
          },
          "type": "remote",
          "command": "/maven/wget_latest_snapshot",
          "tool_name": [
            "Deploy"
          ],
          "code": null,
          "klass": "MaestroDev::Plugin::MavenWorker",
          "dependencies": null,
          "language": "ruby",
          "pom": null,
          "image": "maven.png",
          "tags": [

          ],
          "created_at": "2014-02-07T16:36:50+00:00",
          "updated_at": "2014-02-07T16:36:50+00:00",
          "plugin_id": 59
        },
        {
          "id": 63,
          "name": "tomcat deploy",
          "description": "Deploy A Web Application To Tomcat With A Given Context",
          "position": 1,
          "options": {
            "host": {
              "type": "String",
              "value": "localhost",
              "label": "Tomcat Host",
              "required": false,
              "description": "Hostname of the server running Tomcat (this field is only used if 'tomcat_root_url' does not contain a valid url)"
            },
            "port": {
              "type": "Integer",
              "value": 8080,
              "label": "Tomcat Port",
              "required": false,
              "description": "Port Tomcat is bound to (this field is only used if 'tomcat_root_url' does not contain a valid url)"
            },
            "tomcat_root_url": {
              "type": "String",
              "value": "/",
              "label": "Tomcat URL",
              "required": true,
              "description": "Complete URL of Tomcat root page.  Alternatively, if 'host' and 'port' fields used, the path to Tomcat - usually '/')"
            },
            "path": {
              "type": "String",
              "value": "",
              "label": "WAR file (local)",
              "required": true,
              "description": "Location of the WAR file (on local filesystem)"
            },
            "web_path": {
              "type": "String",
              "value": "",
              "label": "Context Path (tomcat)",
              "required": true,
              "description": "Context path to deploy application to"
            },
            "user": {
              "type": "String",
              "value": "",
              "label": "Tomcat User",
              "required": true,
              "description": "Username that has manager role on Tomcat (do not include in 'tomcat_root_url' field as password would be visible)"
            },
            "password": {
              "type": "Password",
              "value": "",
              "label": "Tomcat Password",
              "required": true,
              "description": "Password for user that has manager role on Tomcat (do not include in 'tomcat_root_url' field as password would be visible)"
            },
            "max_connect_attempts": {
              "type": "Integer",
              "value": 5,
              "label": "Max Retries",
              "required": true,
              "description": "Number of times the task will attempt to connect to Tomcat"
            },
            "timeout": {
              "type": "Integer",
              "value": 90,
              "label": "Retry Delay",
              "required": true,
              "description": "How long to delay between connection retries"
            }
          },
          "type": "remote",
          "command": "/tomcat/deploy",
          "tool_name": [
            "Deploy"
          ],
          "code": null,
          "klass": "MaestroDev::Plugin::TomcatWorker",
          "dependencies": null,
          "language": "ruby",
          "pom": null,
          "image": "tomcat.png",
          "tags": [

          ],
          "created_at": "2014-02-07T16:36:52+00:00",
          "updated_at": "2014-03-15T10:49:55+00:00",
          "plugin_id": 64
        }
      ],
      "composition_configurations": [

      ]
    }
  ],
  "groups": [
    {
      "name": "Examples: Java"
    }
  ]
}
